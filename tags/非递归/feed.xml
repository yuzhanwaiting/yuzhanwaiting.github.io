<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>微端生活</title>
    <link>http://www.yuzhan.me/tags/%E9%9D%9E%E9%80%92%E5%BD%92/feed/index.xml</link>
    <description>Recent content on 微端生活</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="http://www.yuzhan.me/tags/%E9%9D%9E%E9%80%92%E5%BD%92/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>无限级分类研究：（五）第二种实现初探</title>
      <link>http://www.yuzhan.me/post/2014-01-13-%E6%97%A0%E9%99%90%E7%BA%A7%E5%88%86%E7%B1%BB%E7%A0%94%E7%A9%B6%EF%BC%9A%EF%BC%88%E4%BA%94%EF%BC%89%E7%AC%AC%E4%BA%8C%E7%A7%8D%E5%AE%9E%E7%8E%B0%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Mon, 13 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.yuzhan.me/post/2014-01-13-%E6%97%A0%E9%99%90%E7%BA%A7%E5%88%86%E7%B1%BB%E7%A0%94%E7%A9%B6%EF%BC%9A%EF%BC%88%E4%BA%94%EF%BC%89%E7%AC%AC%E4%BA%8C%E7%A7%8D%E5%AE%9E%E7%8E%B0%E5%88%9D%E6%8E%A2/</guid>
      <description>&lt;p&gt;继续我们上一篇文章的问题吧。&lt;br /&gt;
我们能不能不用循环就写出某个栏目的子类呢？答案是肯定的。&lt;/p&gt;

&lt;p&gt;要解答这个问题，我们先讨论一个问题。&lt;br /&gt;
之前的程序中，我们给每一个栏目定一个level。如此做，栏目的层级自然分开，十分容易就可以排序。&lt;/p&gt;

&lt;p&gt;既然如此，我们可以考虑构建一个栏目层级。但是这个层级，不能简简单单的定位level，因为level可以很简单的循环出来。我们需要的是一个能够生成无限级的结构。于是，我们可以考虑一下以连接符&amp;#8221;&lt;strong&gt;-&amp;#8221;&lt;/strong&gt;来生成层级。如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.yuzhan.me/public/img/images/2014/01/无限级分类结构示意图1.png&#34; alt=&#34;无限级分类结构示意图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如图，path为层级结构，这种结构的特点，为父栏目的层级。比如新闻的父栏目为0,则path为0，体育新闻的父栏目为1，则path为0-1，以此类推。&lt;/p&gt;

&lt;p&gt;我们以此构建一张表&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE `category_2` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;分类id&#39;,
  `pid` int(10) unsigned NOT NULL COMMENT &#39;分类父id&#39;,
  `name` varchar(30) NOT NULL COMMENT &#39;分类名称&#39;,
  `list_order` int(11) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;分类排序，默认为0&#39;,
  `path` varchar(255) NOT NULL COMMENT &#39;分级层次&#39;,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接下来，插入数据&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INSERT INTO `category_2` VALUES (&#39;1&#39;, &#39;0&#39;, &#39;新闻&#39;, &#39;0&#39;, &#39;0&#39;);
INSERT INTO `category_2` VALUES (&#39;2&#39;, &#39;1&#39;, &#39;体育新闻&#39;, &#39;0&#39;, &#39;0-1&#39;);
INSERT INTO `category_2` VALUES (&#39;3&#39;, &#39;1&#39;, &#39;社会新闻&#39;, &#39;3&#39;, &#39;0-1&#39;);
INSERT INTO `category_2` VALUES (&#39;4&#39;, &#39;2&#39;, &#39;NBA&#39;, &#39;5&#39;, &#39;0-1-2&#39;);
INSERT INTO `category_2` VALUES (&#39;5&#39;, &#39;2&#39;, &#39;欧冠&#39;, &#39;2&#39;, &#39;0-1-2&#39;);
INSERT INTO `category_2` VALUES (&#39;6&#39;, &#39;0&#39;, &#39;世界&#39;, &#39;4&#39;, &#39;0&#39;);
INSERT INTO `category_2` VALUES (&#39;7&#39;, &#39;6&#39;, &#39;中东&#39;, &#39;0&#39;, &#39;0-6&#39;);
INSERT INTO `category_2` VALUES (&#39;8&#39;, &#39;6&#39;, &#39;欧洲&#39;, &#39;6&#39;, &#39;0-6&#39;);
INSERT INTO `category_2` VALUES (&#39;9&#39;, &#39;8&#39;, &#39;俄罗斯&#39;, &#39;0&#39;, &#39;0-6-8&#39;);
INSERT INTO `category_2` VALUES (&#39;10&#39;, &#39;3&#39;, &#39;大楚新闻&#39;, &#39;0&#39;, &#39;0-1-3&#39;);
INSERT INTO `category_2` VALUES (&#39;11&#39;, &#39;5&#39;, &#39;皇马&#39;, &#39;0&#39;, &#39;0-1-2-5&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为&lt;strong&gt;path&lt;/strong&gt;字段为varchar,而且结构固定，都是以0开始，因此，我们可以对其进行排序。&lt;/p&gt;

&lt;p&gt;于是我们直接组织sql，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;elect *,concat(`path`,&#39;-&#39;,`id`) new_order from category_2 order by new_order
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此段sql，可以完全输出所有栏目。不用递归，不用缓存，十分简洁。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.yuzhan.me/public/img/images/2014/01/一条sql输出所有栏目1.png&#34; alt=&#34;一条sql输出所有栏目&#34; /&gt;&lt;br /&gt;
那么，如何输出某个栏目的子栏目呢？比如，此刻的需求就是要求出所有新闻的后代栏目。对于sql熟悉的我们，会马上写&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;select *,concat(`path`,&#39;-&#39;,`id`) new_order from category_2 where `path` like &amp;quot;0-1%&amp;quot; order by new_order
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://www.yuzhan.me/public/img/images/2014/01/求出栏目的后代栏目1.png&#34; alt=&#34;求出栏目的后代栏目&#34; /&gt;&lt;br /&gt;
看看，多么简单。&lt;br /&gt;
就这样，已经解决我们之前需要复杂操作的语句。&lt;/p&gt;

&lt;p&gt;今天就写到这里。明天，我们将说说，该结构的增和改，尽情期待。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>